From 6dc280ffc189b8d534e7e9ff758b12f31a8d3234 Mon Sep 17 00:00:00 2001
From: Linus Walleij <linus.walleij@stericsson.com>
Date: Wed, 5 Jan 2011 00:44:32 +0100
Subject: [PATCH 5/6] mmc: fix division by zero in MMC core

The card is not always clocked and the clock frequency zero is perfectly
legal, thus this code in mmc_set_data_timeout() may cause a division by
zero. It will be triggered more often if you're using software clock
gating but can be triggered under other conditions too.

Upstream status: accepted

Reported-by: Pierre Tardy <tardyp@gmail.com>
Signed-off-by: Linus Walleij <linus.walleij@stericsson.com>
Reviewed-by: Chris Ball <cjb@laptop.org>
Cc: <stable@kernel.org>
Signed-off-by: Chris Ball <cjb@laptop.org>
Signed-off-by: Eliad Peller <eliad@wizery.com>
---
 drivers/mmc/core/core.c |    5 +++--
 1 files changed, 3 insertions(+), 2 deletions(-)

Index: kernel/linux-2.6.37-psp04.02.00.07/drivers/mmc/core/core.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.02.00.07/drivers/mmc/core/core.c	2013-05-14 09:59:42.659227477 -0600
+++ kernel/linux-2.6.37-psp04.02.00.07/drivers/mmc/core/core.c	2013-05-14 09:59:42.731227477 -0600
@@ -296,8 +296,9 @@
 		unsigned int timeout_us, limit_us;
 
 		timeout_us = data->timeout_ns / 1000;
-		timeout_us += data->timeout_clks * 1000 /
-			(card->host->ios.clock / 1000);
+		if (card->host->ios.clock)
+			timeout_us += data->timeout_clks * 1000 /
+				(card->host->ios.clock / 1000);
 
 		if (data->flags & MMC_DATA_WRITE)
 			/*
